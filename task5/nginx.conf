user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;

    ##
    # Gzip Settings
    ##

    gzip on;

    ##
    # Virtual Host Configs
    ##

    server {
        listen 443 ssl;
        server_name server1.in;

        ssl_certificate certP.pem;
        ssl_certificate_key keyP.pem;

	ssl_client_certificate ca.crt;
	ssl_verify_client on;

        location / {
            proxy_pass https://192.168.0.109:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Configure proxy to pass HTTPS traffic correctly
            proxy_redirect off;
            proxy_ssl_session_reuse on;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
    
    server {
        listen 443 ssl;
        server_name server2.in;

        ssl_certificate certP.pem;
        ssl_certificate_key keyP.pem;

	ssl_client_certificate ca.crt;
        ssl_verify_client on;

        location / {
            proxy_pass https://192.168.0.106:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Configure proxy to pass HTTPS traffic correctly
            proxy_redirect off;
            proxy_ssl_session_reuse on;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }	
}
